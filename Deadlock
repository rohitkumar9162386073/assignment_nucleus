package Assignment15;

public class TestDeadLock {
    public static void main(String[] args) {
         String resource1 = "Ram lal hirani";
         String resource2 = "Amar lal khurana";
        // t1 tries to lock resource1 then resource2
        class T1 implements Runnable {
            public void run() {
                synchronized (resource1) {
                    System.out.println("Thread 1: locked resource 1");

                    try { Thread.sleep(100);} catch (Exception e) {}

                    synchronized (resource2) {
                        System.out.println("Thread 1: locked resource 2");
                    }
                }
            }
        }

        // t2 tries to lock resource2 then resource1
        class T2 implements Runnable {
            public void run() {
                synchronized (resource2) {
                    System.out.println("Thread 2: locked resource 2");

                    try { Thread.sleep(100);} catch (Exception e) {}

                    synchronized (resource1) {
                        System.out.println("Thread 2: locked resource 1");
                    }
                }
            }
        }


        Thread t1 = new Thread(new T1());
        Thread t2 = new Thread(new T2());

        t1.start();
        t2.start();
    }
}














package Assignment15;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;

public class ReadFileT1 implements Runnable{

    String fileName;
    ReadFileT1(String fileName){
        this.fileName = fileName;
    }

    @Override
    public synchronized void run() {

        BufferedReader reader;


        try {
            reader = new BufferedReader(new FileReader(fileName));
            String line = reader.readLine();
            while (line != null) {
                System.out.println(Thread.currentThread().getName());
                System.out.println(line);
                // read next line
                line = reader.readLine();
            }
            wait(1000);
            reader.close();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (InterruptedException e) {
            throw new RuntimeException(e);
        }
        notify();
    }
}


package Assignment15;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

public class ReadFileT2 implements Runnable{

    String fileName;
    ReadFileT2(String fileName){
        this.fileName = fileName;
    }

    @Override
    public synchronized void run() {

        BufferedReader reader;

        try {
            reader = new BufferedReader(new FileReader(fileName));
            String line = reader.readLine();

            while (line != null) {
                System.out.println(Thread.currentThread().getName());
                System.out.println(line);
                // read next line
                line = reader.readLine();
            }
            wait(2000);
            reader.close();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (InterruptedException e) {
            throw new RuntimeException(e);
        }
        notify();
    }
}




